/**
 * Confluent Schema Registry
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.13.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "srclient/rest/ClientConfiguration.h"

namespace srclient::rest {

ClientConfiguration::ClientConfiguration(const std::vector<std::string>& base_urls)
    : baseUrls_(base_urls),
      basic_auth_(std::nullopt),
      bearer_access_token_(std::nullopt),
      cache_capacity_(1000),
      cache_latest_ttl_sec_(3600),
      max_retries_(3),
      retries_wait_ms_(1000),
      retries_max_wait_ms_(5000)
{
}

ClientConfiguration::~ClientConfiguration()
{
}

std::vector<std::string> ClientConfiguration::getBaseUrls() const
{
    return baseUrls_;
}

// Authentication getters and setters
std::optional<std::string> ClientConfiguration::getBasicAuth() const
{
    return basic_auth_;
}

void ClientConfiguration::setBasicAuth(const std::optional<std::string>& basic_auth)
{
    basic_auth_ = basic_auth;
}

std::optional<std::string> ClientConfiguration::getBearerAccessToken() const
{
    return bearer_access_token_;
}

void ClientConfiguration::setBearerAccessToken(const std::optional<std::string>& bearer_access_token)
{
    bearer_access_token_ = bearer_access_token;
}

// Cache configuration getters and setters
std::uint64_t ClientConfiguration::getCacheCapacity() const
{
    return cache_capacity_;
}

void ClientConfiguration::setCacheCapacity(std::uint64_t cache_capacity)
{
    cache_capacity_ = cache_capacity;
}

std::uint64_t ClientConfiguration::getCacheLatestTtlSec() const
{
    return cache_latest_ttl_sec_;
}

void ClientConfiguration::setCacheLatestTtlSec(std::uint64_t cache_latest_ttl_sec)
{
    cache_latest_ttl_sec_ = cache_latest_ttl_sec;
}

// Retry configuration getters and setters
std::uint32_t ClientConfiguration::getMaxRetries() const
{
    return max_retries_;
}

void ClientConfiguration::setMaxRetries(std::uint32_t max_retries)
{
    max_retries_ = max_retries;
}

std::uint32_t ClientConfiguration::getRetriesWaitMs() const
{
    return retries_wait_ms_;
}

void ClientConfiguration::setRetriesWaitMs(std::uint32_t retries_wait_ms)
{
    retries_wait_ms_ = retries_wait_ms;
}

std::uint32_t ClientConfiguration::getRetriesMaxWaitMs() const
{
    return retries_max_wait_ms_;
}

void ClientConfiguration::setRetriesMaxWaitMs(std::uint32_t retries_max_wait_ms)
{
    retries_max_wait_ms_ = retries_max_wait_ms;
}

bool ClientConfiguration::operator==(const ClientConfiguration& other) const
{
    return baseUrls_ == other.baseUrls_ &&
           basic_auth_ == other.basic_auth_ &&
           bearer_access_token_ == other.bearer_access_token_ &&
           cache_capacity_ == other.cache_capacity_ &&
           cache_latest_ttl_sec_ == other.cache_latest_ttl_sec_ &&
           max_retries_ == other.max_retries_ &&
           retries_wait_ms_ == other.retries_wait_ms_ &&
           retries_max_wait_ms_ == other.retries_max_wait_ms_;
}

bool ClientConfiguration::operator!=(const ClientConfiguration& other) const
{
    return !(*this == other);
}

}
