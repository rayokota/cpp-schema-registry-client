/**
 * Confluent Schema Registry
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.13.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "srclient/rest/RestClient.h"

#include <sstream>
#include <limits>
#include <iomanip>

namespace org {
namespace openapitools {
namespace client {
namespace api {

RestClient::RestClient(std::shared_ptr<const ClientConfiguration> configuration )
    : m_Configuration(configuration)
{
    // Initialize a client for each base URL
    for (const auto& baseUrl : configuration->getBaseUrls()) {
        std::unique_ptr<httplib::Client> client = std::make_unique<httplib::Client>(baseUrl);
        m_Clients.push_back(std::move(client));
    }
}
RestClient::~RestClient()
{
}

std::shared_ptr<const ClientConfiguration> RestClient::getConfiguration() const
{
    return m_Configuration;
}

httplib::Result RestClient::sendRequest(
    const std::string& path,
    const std::string& method,
    const std::multimap<std::string, std::string>& query,
    const std::string& body
) const
{
    httplib::Request req;
    req.path = path;
    req.method = method;
    req.params = query;
    req.body = body;

    return m_Clients.front()->send(req);
}

}
}
}
}
