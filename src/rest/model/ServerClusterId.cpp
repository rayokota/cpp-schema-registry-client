/**
* Confluent Schema Registry
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "srclient/rest/model/ServerClusterId.h"
#include "srclient/rest/model/Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ServerClusterId::ServerClusterId()
{
    m_ScopeIsSet = false;
    m_Id = "";
    m_IdIsSet = false;
    
}

void ServerClusterId::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ServerClusterId::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ServerClusterId::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ServerClusterId" : pathPrefix;

            
    return success;
}

bool ServerClusterId::operator==(const ServerClusterId& rhs) const
{
    return
    
    
    
    ((!scopeIsSet() && !rhs.scopeIsSet()) || (scopeIsSet() && rhs.scopeIsSet() && getScope() == rhs.getScope())) &&
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId()))
    
    ;
}

bool ServerClusterId::operator!=(const ServerClusterId& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ServerClusterId& o)
{
    j = nlohmann::json::object();
    if(o.scopeIsSet() || !o.m_Scope.empty())
        j["scope"] = o.m_Scope;
    if(o.idIsSet())
        j["id"] = o.m_Id;
    
}

void from_json(const nlohmann::json& j, ServerClusterId& o)
{
    if(j.find("scope") != j.end())
    {
        j.at("scope").get_to(o.m_Scope);
        o.m_ScopeIsSet = true;
    } 
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    
}

std::map<std::string, nlohmann::json> ServerClusterId::getScope() const
{
    return m_Scope;
}
void ServerClusterId::setScope(std::map<std::string, nlohmann::json> const& value)
{
    m_Scope = value;
    m_ScopeIsSet = true;
}
bool ServerClusterId::scopeIsSet() const
{
    return m_ScopeIsSet;
}
void ServerClusterId::unsetScope()
{
    m_ScopeIsSet = false;
}
std::string ServerClusterId::getId() const
{
    return m_Id;
}
void ServerClusterId::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool ServerClusterId::idIsSet() const
{
    return m_IdIsSet;
}
void ServerClusterId::unsetId()
{
    m_IdIsSet = false;
}


} // namespace org::openapitools::server::model

