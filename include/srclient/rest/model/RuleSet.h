/**
* Confluent Schema Registry
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * RuleSet.h
 *
 * Schema rule set
 */

#ifndef SRCLIENT_REST_MODEL_RULESET_H_
#define SRCLIENT_REST_MODEL_RULESET_H_


#include "Rule.h"
#include <vector>
#include <optional>
#include <nlohmann/json.hpp>

namespace srclient::rest::model
{

/// <summary>
/// Schema rule set
/// </summary>
class  RuleSet
{
public:
    RuleSet();
    virtual ~RuleSet() = default;

    bool operator==(const RuleSet& rhs) const;
    bool operator!=(const RuleSet& rhs) const;

    /////////////////////////////////////////////
    /// RuleSet members

    /// <summary>
    /// 
    /// </summary>
    std::optional<std::vector<srclient::rest::model::Rule>> getMigrationRules() const;
    void setMigrationRules(const std::optional<std::vector<srclient::rest::model::Rule>>& value);
    /// <summary>
    /// 
    /// </summary>
    std::optional<std::vector<srclient::rest::model::Rule>> getDomainRules() const;
    void setDomainRules(const std::optional<std::vector<srclient::rest::model::Rule>>& value);
    /// <summary>
    /// 
    /// </summary>
    std::optional<std::vector<srclient::rest::model::Rule>> getEncodingRules() const;
    void setEncodingRules(const std::optional<std::vector<srclient::rest::model::Rule>>& value);

    friend  void to_json(nlohmann::json& j, const RuleSet& o);
    friend  void from_json(const nlohmann::json& j, RuleSet& o);
protected:
    std::optional<std::vector<srclient::rest::model::Rule>> m_MigrationRules;
    std::optional<std::vector<srclient::rest::model::Rule>> m_DomainRules;
    std::optional<std::vector<srclient::rest::model::Rule>> m_EncodingRules;

};

} // namespace srclient::rest::model

#endif /* SRCLIENT_REST_MODEL_RULESET_H_ */
