/**
* Confluent Schema Registry
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ConfigUpdateRequest.h
 *
 * Config update request
 */

#ifndef ConfigUpdateRequest_H_
#define ConfigUpdateRequest_H_


#include <string>
#include "Metadata.h"
#include "RuleSet.h"
#include <nlohmann/json.hpp>

namespace srclient::rest::model
{

/// <summary>
/// Config update request
/// </summary>
class  ConfigUpdateRequest
{
public:
    ConfigUpdateRequest();
    virtual ~ConfigUpdateRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ConfigUpdateRequest& rhs) const;
    bool operator!=(const ConfigUpdateRequest& rhs) const;

    /////////////////////////////////////////////
    /// ConfigUpdateRequest members

    /// <summary>
    /// 
    /// </summary>
    std::string getAlias() const;
    void setAlias(std::string const& value);
    bool aliasIsSet() const;
    void unsetAlias();
    /// <summary>
    /// 
    /// </summary>
    bool isNormalize() const;
    void setNormalize(bool const value);
    bool normalizeIsSet() const;
    void unsetNormalize();
    /// <summary>
    /// 
    /// </summary>
    bool isValidateFields() const;
    void setValidateFields(bool const value);
    bool validateFieldsIsSet() const;
    void unsetValidateFields();
    /// <summary>
    /// 
    /// </summary>
    bool isValidateRules() const;
    void setValidateRules(bool const value);
    bool validateRulesIsSet() const;
    void unsetValidateRules();
    /// <summary>
    /// Compatibility Level
    /// </summary>
    std::string getCompatibility() const;
    void setCompatibility(std::string const& value);
    bool compatibilityIsSet() const;
    void unsetCompatibility();
    /// <summary>
    /// 
    /// </summary>
    std::string getCompatibilityGroup() const;
    void setCompatibilityGroup(std::string const& value);
    bool compatibilityGroupIsSet() const;
    void unsetCompatibilityGroup();
    /// <summary>
    /// 
    /// </summary>
    srclient::rest::model::Metadata getDefaultMetadata() const;
    void setDefaultMetadata(srclient::rest::model::Metadata const& value);
    bool defaultMetadataIsSet() const;
    void unsetDefaultMetadata();
    /// <summary>
    /// 
    /// </summary>
    srclient::rest::model::Metadata getOverrideMetadata() const;
    void setOverrideMetadata(srclient::rest::model::Metadata const& value);
    bool overrideMetadataIsSet() const;
    void unsetOverrideMetadata();
    /// <summary>
    /// 
    /// </summary>
    srclient::rest::model::RuleSet getDefaultRuleSet() const;
    void setDefaultRuleSet(srclient::rest::model::RuleSet const& value);
    bool defaultRuleSetIsSet() const;
    void unsetDefaultRuleSet();
    /// <summary>
    /// 
    /// </summary>
    srclient::rest::model::RuleSet getOverrideRuleSet() const;
    void setOverrideRuleSet(srclient::rest::model::RuleSet const& value);
    bool overrideRuleSetIsSet() const;
    void unsetOverrideRuleSet();

    friend  void to_json(nlohmann::json& j, const ConfigUpdateRequest& o);
    friend  void from_json(const nlohmann::json& j, ConfigUpdateRequest& o);
protected:
    std::string m_Alias;
    bool m_AliasIsSet;
    bool m_Normalize;
    bool m_NormalizeIsSet;
    bool m_ValidateFields;
    bool m_ValidateFieldsIsSet;
    bool m_ValidateRules;
    bool m_ValidateRulesIsSet;
    std::string m_Compatibility;
    bool m_CompatibilityIsSet;
    std::string m_CompatibilityGroup;
    bool m_CompatibilityGroupIsSet;
    srclient::rest::model::Metadata m_DefaultMetadata;
    bool m_DefaultMetadataIsSet;
    srclient::rest::model::Metadata m_OverrideMetadata;
    bool m_OverrideMetadataIsSet;
    srclient::rest::model::RuleSet m_DefaultRuleSet;
    bool m_DefaultRuleSetIsSet;
    srclient::rest::model::RuleSet m_OverrideRuleSet;
    bool m_OverrideRuleSetIsSet;
    
};

} // namespace srclient::rest::model

#endif /* ConfigUpdateRequest_H_ */
