/**
* Confluent Schema Registry
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Metadata.h
 *
 * User-defined metadata
 */

#ifndef SRCLIENT_REST_MODEL_METADATA_H_
#define SRCLIENT_REST_MODEL_METADATA_H_


#include <string>
#include <map>
#include <optional>
#include <vector>
#include <nlohmann/json.hpp>

namespace srclient::rest::model
{

/// <summary>
/// User-defined metadata
/// </summary>
class  Metadata
{
public:
    Metadata();
    virtual ~Metadata() = default;

    bool operator==(const Metadata& rhs) const;
    bool operator!=(const Metadata& rhs) const;

    /////////////////////////////////////////////
    /// Metadata members

    /// <summary>
    /// 
    /// </summary>
    std::optional<std::map<std::string, std::vector<std::string>>> getTags() const;
    void setTags(const std::optional<std::map<std::string, std::vector<std::string>>>& value);
    /// <summary>
    /// 
    /// </summary>
    std::optional<std::map<std::string, std::string>> getProperties() const;
    void setProperties(const std::optional<std::map<std::string, std::string>>& value);
    /// <summary>
    /// 
    /// </summary>
    std::optional<std::vector<std::string>> getSensitive() const;
    void setSensitive(const std::optional<std::vector<std::string>>& value);

    friend  void to_json(nlohmann::json& j, const Metadata& o);
    friend  void from_json(const nlohmann::json& j, Metadata& o);
protected:
    std::optional<std::map<std::string, std::vector<std::string>>> m_Tags;
    std::optional<std::map<std::string, std::string>> m_Properties;
    std::optional<std::vector<std::string>> m_Sensitive;
    
};

} // namespace srclient::rest::model

#endif /* SRCLIENT_REST_MODEL_METADATA_H_ */
