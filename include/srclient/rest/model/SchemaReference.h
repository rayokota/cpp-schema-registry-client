/**
* Confluent Schema Registry
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SchemaReference.h
 *
 * Schema reference
 */

#pragma once

#include <string>
#include <optional>
#include <nlohmann/json.hpp>

namespace srclient::rest::model
{

/// <summary>
/// Schema reference
/// </summary>
class  SchemaReference
{
public:
    SchemaReference();
    virtual ~SchemaReference() = default;

    bool operator==(const SchemaReference& rhs) const;
    bool operator!=(const SchemaReference& rhs) const;

    /////////////////////////////////////////////
    /// SchemaReference members

    /// <summary>
    /// Reference name
    /// </summary>
    std::optional<std::string> getName() const;
    void setName(const std::optional<std::string>& value);
    /// <summary>
    /// Name of the referenced subject
    /// </summary>
    std::optional<std::string> getSubject() const;
    void setSubject(const std::optional<std::string>& value);
    /// <summary>
    /// Version number of the referenced subject
    /// </summary>
    std::optional<int32_t> getVersion() const;
    void setVersion(const std::optional<int32_t>& value);

    friend  void to_json(nlohmann::json& j, const SchemaReference& o);
    friend  void from_json(const nlohmann::json& j, SchemaReference& o);
protected:
    std::optional<std::string> m_Name;
    std::optional<std::string> m_Subject;
    std::optional<int32_t> m_Version;
    
};

} // namespace srclient::rest::model


