/**
* Confluent Schema Registry
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ServerClusterId.h
 *
 * 
 */

#ifndef ServerClusterId_H_
#define ServerClusterId_H_


#include <nlohmann/json.hpp>
#include <string>
#include <map>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  ServerClusterId
{
public:
    ServerClusterId();
    virtual ~ServerClusterId() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ServerClusterId& rhs) const;
    bool operator!=(const ServerClusterId& rhs) const;

    /////////////////////////////////////////////
    /// ServerClusterId members

    /// <summary>
    /// 
    /// </summary>
    std::map<std::string, nlohmann::json> getScope() const;
    void setScope(std::map<std::string, nlohmann::json> const& value);
    bool scopeIsSet() const;
    void unsetScope();
    /// <summary>
    /// 
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();

    friend  void to_json(nlohmann::json& j, const ServerClusterId& o);
    friend  void from_json(const nlohmann::json& j, ServerClusterId& o);
protected:
    std::map<std::string, nlohmann::json> m_Scope;
    bool m_ScopeIsSet;
    std::string m_Id;
    bool m_IdIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* ServerClusterId_H_ */
