/**
* Confluent Schema Registry
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SchemaRegistryServerVersion.h
 *
 * 
 */

#ifndef SchemaRegistryServerVersion_H_
#define SchemaRegistryServerVersion_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  SchemaRegistryServerVersion
{
public:
    SchemaRegistryServerVersion();
    virtual ~SchemaRegistryServerVersion() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const SchemaRegistryServerVersion& rhs) const;
    bool operator!=(const SchemaRegistryServerVersion& rhs) const;

    /////////////////////////////////////////////
    /// SchemaRegistryServerVersion members

    /// <summary>
    /// 
    /// </summary>
    std::string getVersion() const;
    void setVersion(std::string const& value);
    bool versionIsSet() const;
    void unsetVersion();
    /// <summary>
    /// 
    /// </summary>
    std::string getCommitId() const;
    void setCommitId(std::string const& value);
    bool commitIdIsSet() const;
    void unsetCommitId();

    friend  void to_json(nlohmann::json& j, const SchemaRegistryServerVersion& o);
    friend  void from_json(const nlohmann::json& j, SchemaRegistryServerVersion& o);
protected:
    std::string m_Version;
    bool m_VersionIsSet;
    std::string m_CommitId;
    bool m_CommitIdIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* SchemaRegistryServerVersion_H_ */
