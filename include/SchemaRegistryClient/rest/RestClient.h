/**
 * Confluent Schema Registry
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.13.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RestClient.h
 *
 * This is an API client responsible for stating the HTTP calls
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_RestClient_H_
#define ORG_OPENAPITOOLS_CLIENT_API_RestClient_H_


#include "SchemaRegistryClient/rest/ClientConfiguration.h"
#include "SchemaRegistryClient/rest/RestException.h"

#if  defined (_WIN32) || defined (_WIN64)
#undef U
#endif

#include <memory>
#include <vector>
#include <functional>

namespace org {
namespace openapitools {
namespace client {
namespace api {

class  RestClient
{
public:
    RestClient( std::shared_ptr<const ClientConfiguration> configuration = nullptr );
    virtual ~RestClient();

    std::shared_ptr<const ClientConfiguration> getConfiguration() const;

    /*
    pplx::task<web::http::http_response> callApi(
        const utility::string_t& path,
        const utility::string_t& method,
        const std::map<utility::string_t, utility::string_t>& queryParams,
        const std::shared_ptr<IHttpBody> postBody,
        const std::map<utility::string_t, utility::string_t>& headerParams,
        const std::map<utility::string_t, utility::string_t>& formParams,
        const std::map<utility::string_t, std::shared_ptr<HttpContent>>& fileParams,
        const utility::string_t& contentType
    ) const;
     */

protected:
    std::shared_ptr<const ClientConfiguration> m_Configuration;
    std::vector<httplib::Client*> m_Clients;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_RestClient_H_ */
