// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test/example.proto
// Protobuf C++ Version: 5.29.3

#include "test/example.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace test {

inline constexpr Pizza::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : toppings_{},
        size_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Pizza::Pizza(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PizzaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PizzaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PizzaDefaultTypeInternal() {}
  union {
    Pizza _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PizzaDefaultTypeInternal _Pizza_default_instance_;

inline constexpr Author::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : works_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        picture_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        pii_oneof_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Author::Author(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthorDefaultTypeInternal() {}
  union {
    Author _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthorDefaultTypeInternal _Author_default_instance_;
}  // namespace test
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_test_2fexample_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_test_2fexample_2eproto = nullptr;
const ::uint32_t
    TableStruct_test_2fexample_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::test::Author, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::test::Author, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test::Author, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::test::Author, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::test::Author, _impl_.picture_),
        PROTOBUF_FIELD_OFFSET(::test::Author, _impl_.works_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::test::Author, _impl_.pii_oneof_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::test::Pizza, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test::Pizza, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::test::Pizza, _impl_.toppings_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::test::Author)},
        {15, -1, -1, sizeof(::test::Pizza)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::test::_Author_default_instance_._instance,
    &::test::_Pizza_default_instance_._instance,
};
const char descriptor_table_protodef_test_2fexample_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022test/example.proto\022\004test\032\024confluent/me"
    "ta.proto\"\253\001\n\006Author\022\026\n\004name\030\001 \001(\tB\010\202D\005\032\003"
    "PII\022\n\n\002id\030\002 \001(\005\022\031\n\007picture\030\003 \001(\014B\010\202D\005\032\003P"
    "II\022\r\n\005works\030\004 \003(\t\022$\n\roneof_message\030\005 \001(\013"
    "2\013.test.PizzaH\000\022 \n\014oneof_string\030\006 \001(\tB\010\202"
    "D\005\032\003PIIH\000B\013\n\tpii_oneof\"\'\n\005Pizza\022\014\n\004size\030"
    "\001 \001(\t\022\020\n\010toppings\030\002 \003(\tb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_test_2fexample_2eproto_deps[1] =
    {
        &::descriptor_table_confluent_2fmeta_2eproto,
};
static ::absl::once_flag descriptor_table_test_2fexample_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_test_2fexample_2eproto = {
    false,
    false,
    271,
    descriptor_table_protodef_test_2fexample_2eproto,
    "test/example.proto",
    &descriptor_table_test_2fexample_2eproto_once,
    descriptor_table_test_2fexample_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_test_2fexample_2eproto::offsets,
    file_level_enum_descriptors_test_2fexample_2eproto,
    file_level_service_descriptors_test_2fexample_2eproto,
};
namespace test {
// ===================================================================

class Author::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::test::Author, _impl_._oneof_case_);
};

void Author::set_allocated_oneof_message(::test::Pizza* oneof_message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_pii_oneof();
  if (oneof_message) {
    ::google::protobuf::Arena* submessage_arena = oneof_message->GetArena();
    if (message_arena != submessage_arena) {
      oneof_message = ::google::protobuf::internal::GetOwnedMessage(message_arena, oneof_message, submessage_arena);
    }
    set_has_oneof_message();
    _impl_.pii_oneof_.oneof_message_ = oneof_message;
  }
  // @@protoc_insertion_point(field_set_allocated:test.Author.oneof_message)
}
Author::Author(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test.Author)
}
inline PROTOBUF_NDEBUG_INLINE Author::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::test::Author& from_msg)
      : works_{visibility, arena, from.works_},
        name_(arena, from.name_),
        picture_(arena, from.picture_),
        pii_oneof_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Author::Author(
    ::google::protobuf::Arena* arena,
    const Author& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Author* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;
  switch (pii_oneof_case()) {
    case PII_ONEOF_NOT_SET:
      break;
      case kOneofMessage:
        _impl_.pii_oneof_.oneof_message_ = ::google::protobuf::Message::CopyConstruct<::test::Pizza>(arena, *from._impl_.pii_oneof_.oneof_message_);
        break;
      case kOneofString:
        new (&_impl_.pii_oneof_.oneof_string_) decltype(_impl_.pii_oneof_.oneof_string_){arena, from._impl_.pii_oneof_.oneof_string_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:test.Author)
}
inline PROTOBUF_NDEBUG_INLINE Author::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : works_{visibility, arena},
        name_(arena),
        picture_(arena),
        pii_oneof_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Author::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
Author::~Author() {
  // @@protoc_insertion_point(destructor:test.Author)
  SharedDtor(*this);
}
inline void Author::SharedDtor(MessageLite& self) {
  Author& this_ = static_cast<Author&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.picture_.Destroy();
  if (this_.has_pii_oneof()) {
    this_.clear_pii_oneof();
  }
  this_._impl_.~Impl_();
}

void Author::clear_pii_oneof() {
// @@protoc_insertion_point(one_of_clear_start:test.Author)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (pii_oneof_case()) {
    case kOneofMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.pii_oneof_.oneof_message_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.pii_oneof_.oneof_message_);
      }
      break;
    }
    case kOneofString: {
      _impl_.pii_oneof_.oneof_string_.Destroy();
      break;
    }
    case PII_ONEOF_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PII_ONEOF_NOT_SET;
}


inline void* Author::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Author(arena);
}
constexpr auto Author::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Author, _impl_.works_) +
          decltype(Author::_impl_.works_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Author), alignof(Author), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Author::PlacementNew_,
                                 sizeof(Author),
                                 alignof(Author));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Author::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Author_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Author::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Author>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Author::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Author>(), &Author::ByteSizeLong,
            &Author::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Author, _impl_._cached_size_),
        false,
    },
    &Author::kDescriptorMethods,
    &descriptor_table_test_2fexample_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Author::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 1, 41, 2> Author::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test::Author>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string works = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Author, _impl_.works_)}},
    // string name = 1 [(.confluent.field_meta) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Author, _impl_.name_)}},
    // int32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Author, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Author, _impl_.id_)}},
    // bytes picture = 3 [(.confluent.field_meta) = {
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Author, _impl_.picture_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.confluent.field_meta) = {
    {PROTOBUF_FIELD_OFFSET(Author, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 id = 2;
    {PROTOBUF_FIELD_OFFSET(Author, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes picture = 3 [(.confluent.field_meta) = {
    {PROTOBUF_FIELD_OFFSET(Author, _impl_.picture_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated string works = 4;
    {PROTOBUF_FIELD_OFFSET(Author, _impl_.works_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .test.Pizza oneof_message = 5;
    {PROTOBUF_FIELD_OFFSET(Author, _impl_.pii_oneof_.oneof_message_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string oneof_string = 6 [(.confluent.field_meta) = {
    {PROTOBUF_FIELD_OFFSET(Author, _impl_.pii_oneof_.oneof_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::test::Pizza>()},
  }}, {{
    "\13\4\0\0\5\0\14\0"
    "test.Author"
    "name"
    "works"
    "oneof_string"
  }},
};

PROTOBUF_NOINLINE void Author::Clear() {
// @@protoc_insertion_point(message_clear_start:test.Author)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.works_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.picture_.ClearToEmpty();
  _impl_.id_ = 0;
  clear_pii_oneof();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Author::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Author& this_ = static_cast<const Author&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Author::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Author& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:test.Author)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1 [(.confluent.field_meta) = {
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.Author.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 id = 2;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_id(), target);
          }

          // bytes picture = 3 [(.confluent.field_meta) = {
          if (!this_._internal_picture().empty()) {
            const std::string& _s = this_._internal_picture();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // repeated string works = 4;
          for (int i = 0, n = this_._internal_works_size(); i < n; ++i) {
            const auto& s = this_._internal_works().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.Author.works");
            target = stream->WriteString(4, s, target);
          }

          switch (this_.pii_oneof_case()) {
            case kOneofMessage: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.pii_oneof_.oneof_message_, this_._impl_.pii_oneof_.oneof_message_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kOneofString: {
              const std::string& _s = this_._internal_oneof_string();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.Author.oneof_string");
              target = stream->WriteStringMaybeAliased(6, _s, target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:test.Author)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Author::ByteSizeLong(const MessageLite& base) {
          const Author& this_ = static_cast<const Author&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Author::ByteSizeLong() const {
          const Author& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:test.Author)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string works = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_works().size());
              for (int i = 0, n = this_._internal_works().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_works().Get(i));
              }
            }
          }
           {
            // string name = 1 [(.confluent.field_meta) = {
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // bytes picture = 3 [(.confluent.field_meta) = {
            if (!this_._internal_picture().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_picture());
            }
            // int32 id = 2;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
          }
          switch (this_.pii_oneof_case()) {
            // .test.Pizza oneof_message = 5;
            case kOneofMessage: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pii_oneof_.oneof_message_);
              break;
            }
            // string oneof_string = 6 [(.confluent.field_meta) = {
            case kOneofString: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_oneof_string());
              break;
            }
            case PII_ONEOF_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Author::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Author*>(&to_msg);
  auto& from = static_cast<const Author&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:test.Author)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_works()->MergeFrom(from._internal_works());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_picture().empty()) {
    _this->_internal_set_picture(from._internal_picture());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_pii_oneof();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kOneofMessage: {
        if (oneof_needs_init) {
          _this->_impl_.pii_oneof_.oneof_message_ =
              ::google::protobuf::Message::CopyConstruct<::test::Pizza>(arena, *from._impl_.pii_oneof_.oneof_message_);
        } else {
          _this->_impl_.pii_oneof_.oneof_message_->MergeFrom(from._internal_oneof_message());
        }
        break;
      }
      case kOneofString: {
        if (oneof_needs_init) {
          _this->_impl_.pii_oneof_.oneof_string_.InitDefault();
        }
        _this->_impl_.pii_oneof_.oneof_string_.Set(from._internal_oneof_string(), arena);
        break;
      }
      case PII_ONEOF_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Author::CopyFrom(const Author& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.Author)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Author::InternalSwap(Author* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.works_.InternalSwap(&other->_impl_.works_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.picture_, &other->_impl_.picture_, arena);
        swap(_impl_.id_, other->_impl_.id_);
  swap(_impl_.pii_oneof_, other->_impl_.pii_oneof_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Author::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Pizza::_Internal {
 public:
};

Pizza::Pizza(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test.Pizza)
}
inline PROTOBUF_NDEBUG_INLINE Pizza::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::test::Pizza& from_msg)
      : toppings_{visibility, arena, from.toppings_},
        size_(arena, from.size_),
        _cached_size_{0} {}

Pizza::Pizza(
    ::google::protobuf::Arena* arena,
    const Pizza& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Pizza* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:test.Pizza)
}
inline PROTOBUF_NDEBUG_INLINE Pizza::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : toppings_{visibility, arena},
        size_(arena),
        _cached_size_{0} {}

inline void Pizza::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Pizza::~Pizza() {
  // @@protoc_insertion_point(destructor:test.Pizza)
  SharedDtor(*this);
}
inline void Pizza::SharedDtor(MessageLite& self) {
  Pizza& this_ = static_cast<Pizza&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.size_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Pizza::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Pizza(arena);
}
constexpr auto Pizza::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Pizza, _impl_.toppings_) +
          decltype(Pizza::_impl_.toppings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Pizza), alignof(Pizza), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Pizza::PlacementNew_,
                                 sizeof(Pizza),
                                 alignof(Pizza));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Pizza::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Pizza_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Pizza::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Pizza>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Pizza::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Pizza>(), &Pizza::ByteSizeLong,
            &Pizza::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Pizza, _impl_._cached_size_),
        false,
    },
    &Pizza::kDescriptorMethods,
    &descriptor_table_test_2fexample_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Pizza::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 31, 2> Pizza::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test::Pizza>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string toppings = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Pizza, _impl_.toppings_)}},
    // string size = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Pizza, _impl_.size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string size = 1;
    {PROTOBUF_FIELD_OFFSET(Pizza, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string toppings = 2;
    {PROTOBUF_FIELD_OFFSET(Pizza, _impl_.toppings_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\12\4\10\0\0\0\0\0"
    "test.Pizza"
    "size"
    "toppings"
  }},
};

PROTOBUF_NOINLINE void Pizza::Clear() {
// @@protoc_insertion_point(message_clear_start:test.Pizza)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.toppings_.Clear();
  _impl_.size_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Pizza::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Pizza& this_ = static_cast<const Pizza&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Pizza::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Pizza& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:test.Pizza)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string size = 1;
          if (!this_._internal_size().empty()) {
            const std::string& _s = this_._internal_size();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.Pizza.size");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string toppings = 2;
          for (int i = 0, n = this_._internal_toppings_size(); i < n; ++i) {
            const auto& s = this_._internal_toppings().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.Pizza.toppings");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:test.Pizza)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Pizza::ByteSizeLong(const MessageLite& base) {
          const Pizza& this_ = static_cast<const Pizza&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Pizza::ByteSizeLong() const {
          const Pizza& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:test.Pizza)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string toppings = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_toppings().size());
              for (int i = 0, n = this_._internal_toppings().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_toppings().Get(i));
              }
            }
          }
           {
            // string size = 1;
            if (!this_._internal_size().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Pizza::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Pizza*>(&to_msg);
  auto& from = static_cast<const Pizza&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test.Pizza)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_toppings()->MergeFrom(from._internal_toppings());
  if (!from._internal_size().empty()) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pizza::CopyFrom(const Pizza& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.Pizza)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Pizza::InternalSwap(Pizza* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.toppings_.InternalSwap(&other->_impl_.toppings_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.size_, &other->_impl_.size_, arena);
}

::google::protobuf::Metadata Pizza::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace test
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_test_2fexample_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
